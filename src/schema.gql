# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  _id: String!
  name: String!
  label: String!
  initialView: String!
}

type User {
  _id: String!
  rut: String!
  email: String!
  name: String!
  password: String!
  isActive: Boolean!
  role: String!
  isSystemAdmin: Boolean!
  signature: String
}

type View {
  _id: String!
  name: String!
  label: String!
  icon: String!
  children: [View!]!
}

type Loads {
  type: String!
  amount: Float!
}

type Billing {
  name: String!
  rut: String!
  category: String!
  address: String!
  phone: String!
  loads: [Loads!]!
}

type Client {
  _id: String!
  name: String!
  paymentCondition: String!
  receivers: [String!]!
  billing: Billing!
}

type Query {
  getRecoverCode(form: RecoverCodeInput!): RecoverCodeResultUnion!
  getAllUsers: [User!]!
  getAllRoles: [Role!]!
  getAllClients: [Client!]!
}

union RecoverCodeResultUnion = Ok | UserNotFound | InactiveUser

type Ok {
  message: String
}

type UserNotFound {
  message: String!
}

type InactiveUser {
  rut: String!
}

input RecoverCodeInput {
  rut: String!
}

type Mutation {
  changePasswordWithAuthCode(form: NewPasswordInput!): ChangePasswordResultUnion!
  createUser(form: UserInput!): CreateUserResultUnion!
  updateUser(form: UpdateUserInput!): CreateUserResultUnion!
  deleteUser(form: DeleteUserInput!): DeleteUserResultUnion!
  createClient(form: ClientInput!): CreateClientResultUnion!
  updateClient(form: UpdateClientInput!): CreateClientResultUnion!
  deleteClient(form: DeleteClientInput!): DeleteClientResultUnion!
}

union ChangePasswordResultUnion = Ok | UserNotFound | InactiveUser | TokenNotFound | WrongChangePasswordCode

type TokenNotFound {
  message: String!
}

type WrongChangePasswordCode {
  message: String!
}

input NewPasswordInput {
  rut: String!
  password: String!
  confirmPassword: String!
  code: String!
}

union CreateUserResultUnion = Ok | UserAlreadyExists

type UserAlreadyExists {
  rut: String!
}

input UserInput {
  _id: String
  rut: String!
  email: String!
  name: String!
  role: String!
  signature: String
}

input UpdateUserInput {
  _id: String!
  rut: String!
  email: String!
  name: String!
  role: String!
  signature: String
}

union DeleteUserResultUnion = Ok | UserNotFound | ImmutableUser

type ImmutableUser {
  _id: String!
  rut: String!
}

input DeleteUserInput {
  _id: String!
  rut: String!
  email: String!
  name: String!
  role: String!
  signature: String
}

union CreateClientResultUnion = Ok

input ClientInput {
  _id: String
  name: String!
  paymentCondition: String!
  receivers: [String!]!
  billing: BillingInput!
}

input BillingInput {
  name: String!
  rut: String!
  category: String!
  address: String!
  phone: String!
  loads: [LoadsInput!]!
}

input LoadsInput {
  type: String!
  amount: Float!
}

input UpdateClientInput {
  _id: String!
  name: String!
  paymentCondition: String!
  receivers: [String!]!
  billing: BillingInput!
}

union DeleteClientResultUnion = Ok | ClientNotFound

type ClientNotFound {
  message: String!
}

input DeleteClientInput {
  _id: String!
}
